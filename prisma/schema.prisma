generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "rhel-openssl-3.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model AppUser {
  id           String        @id @unique
  firstName    String        @map("first_name")
  lastName     String        @map("last_name")
  email        String        @unique
  number       String
  gender       String
  isActive     Boolean       @map("is_active")
  createdAt    DateTime      @default(now()) @map("created_at")
  displayName  String?       @map("display_name")
  webUserId    String?       @unique @map("web_user_id")
  photoURL     String?       @map("photo_url")
  deletedCalls DeletedCall[]
  folders      Folder[]
  messages     Message[]
  PhoneCall    PhoneCall[]
  settings     Setting[]
  OngoingCall  OngoingCall[]

  @@map("app_users")
}

model PhoneCall {
  id             String    @id @default(uuid())
  oldPhoneCallId String?   @map("old_phone_call_id")
  number         String
  startDate      DateTime  @default(now()) @map("start_date")
  endDate        DateTime? @default(now()) @map("end_date")
  actualEndDate  DateTime? @default(now()) @map("actual_end_date")
  type           String
  isAnswered     Boolean   @map("is_answered")
  userId         String    @map("user_id")
  isActive       Boolean   @map("is_active")
  contactName    String    @map("contact_name")
  createdAt      DateTime  @default(now()) @map("created_at")

  appUser AppUser @relation(fields: [userId], references: [id])

  @@unique([userId, number, startDate])
  @@map("phone_calls")
}

model Folder {
  id               String            @id @default(uuid())
  title            String
  timesUsed        Int               @map("times_used")
  position         Int
  userId           String            @map("user_id")
  isActive         Boolean           @map("is_active")
  createdAt        DateTime          @default(now()) @map("created_at")
  appUser          AppUser           @relation(fields: [userId], references: [id])
  messagesInFolder MessageInFolder[]

  @@map("folders")
}

model Message {
  id         String   @id @default(uuid())
  userId     String   @map("user_id")
  title      String
  shortTitle String   @map("short_title")
  body       String
  position   Int
  timesUsed  Int      @map("times_used")
  isActive   Boolean  @map("is_active")
  createdAt  DateTime @default(now()) @map("created_at")

  appUser          AppUser           @relation(fields: [userId], references: [id])
  messagesInFolder MessageInFolder[]
  MessageSent      MessageSent[]

  @@map("messages")
}

model DeletedCall {
  id        String   @id @default(uuid())
  userId    String   @map("user_id")
  deletedAt DateTime @default(now()) @map("deleted_at")
  number    String
  appUser   AppUser  @relation(fields: [userId], references: [id])

  @@map("deleted_calls")
}

model MessageInFolder {
  id            String   @id @default(uuid())
  messageId     String   @map("message_id")
  folderId      String   @map("folder_id")
  isActive      Boolean  @default(true) @map("is_active")
  createdAt     DateTime @default(now()) @map("created_at")
  userIdMessage String?  @map("user_id_message")
  userIdFolder  String?  @map("user_id_folder")

  folder  Folder  @relation(fields: [folderId], references: [id])
  message Message @relation(fields: [messageId], references: [id])

  @@unique([messageId, folderId])
  @@map("messages_in_folders")
}

model MessageSent {
  id          String    @id @default(uuid())
  sentAt      DateTime? @default(now()) @map("sent_at")
  messageId   String    @map("message_id")
  phoneCallId String    @map("phone_call_id")
  isActive    Boolean   @map("is_active")
  createdAt   DateTime  @default(now()) @map("created_at")

  message Message @relation(fields: [messageId], references: [id])

  @@map("messsages_sent")
}

model Setting {
  id         String   @id @default(uuid())
  key        String
  value      String
  userId     String   @map("user_id")
  enabled    Boolean
  modifiedAt DateTime @default(now()) @updatedAt @map("modified_at")
  appUser    AppUser  @relation(fields: [userId], references: [id])

  @@unique([key, userId])
  @@map("settings")
}

model OngoingCall {
  id          String   @id @default(uuid())
  userId      String   @map("user_id")
  number      String
  contactName String   @map("contact_name")
  createdAt   DateTime @default(now()) @map("created_at")

  appUser AppUser @relation(fields: [userId], references: [id])

  @@map("ongoing_calls")
}
